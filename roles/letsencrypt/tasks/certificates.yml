---
- name: Generate private keys
  shell: openssl genrsa 4096 > {{ letsencrypt_keys_dir }}/{{ item.key }}.key
  args:
    creates: "{{ letsencrypt_keys_dir }}/{{ item.key }}.key"
  when: site_uses_letsencrypt
  with_dict: "{{ wordpress_sites }}"

- name: Ensure correct permissions on private keys
  file:
    path: "{{ letsencrypt_keys_dir }}/{{ item.key }}.key"
    mode: 0600
  when: site_uses_letsencrypt
  with_dict: "{{ wordpress_sites }}"

- name: Generate CSRs
  shell: "openssl req -new -sha256 -key '{{ letsencrypt_keys_dir }}/{{ item.key }}.key' -subj '/' -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf '[SAN]\nsubjectAltName=DNS:{{ site_hosts | join(',DNS:') }}')) > {{ acme_tiny_data_directory }}/csrs/{{ item.key }}-{{ site_hosts_hashes[item.key] }}.csr"
  args:
    executable: /bin/bash
    creates: "{{ acme_tiny_data_directory }}/csrs/{{ item.key }}-{{ site_hosts_hashes[item.key] }}.csr"
  when: site_uses_letsencrypt
  with_dict: "{{ wordpress_sites }}"

- name: Generate the certificates
  command: ./renew-certs.py
  args:
    chdir: "{{ acme_tiny_data_directory }}"
  register: generate_certs
  changed_when: generate_certs.stdout is defined and 'Created' in generate_certs.stdout
  notify: reload nginx
